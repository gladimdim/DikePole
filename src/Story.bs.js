// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

function decodeNextStory(jsonNext) {
  return /* record */[
          /* target */Json_decode.field("target", Json_decode.$$int, jsonNext),
          /* text */Json_decode.field("text", Json_decode.string, jsonNext)
        ];
}

function decodeStep(jsonStory) {
  return /* record */[
          /* text */Json_decode.field("text", Json_decode.string, jsonStory),
          /* id */Json_decode.field("id", Json_decode.$$int, jsonStory),
          /* next */Json_decode.field("next", (function (param) {
                  return Json_decode.list(decodeNextStory, param);
                }), jsonStory)
        ];
}

function decodeStory(json) {
  return Json_decode.list(decodeStep, json);
}

function getTextForId(id, _story) {
  while(true) {
    var story = _story;
    if (story) {
      var h = story[0];
      if (h[/* id */1] === id) {
        return h[/* text */0];
      } else {
        _story = story[1];
        continue ;
      }
    } else {
      console.log("lol");
      return "";
    }
  };
}

function getNextForId(id, _story) {
  while(true) {
    var story = _story;
    if (story) {
      var h = story[0];
      if (h[/* id */1] === id) {
        return h[/* next */2];
      } else {
        _story = story[1];
        continue ;
      }
    } else {
      console.log("empty");
      return /* [] */0;
    }
  };
}

exports.decodeNextStory = decodeNextStory;
exports.decodeStep = decodeStep;
exports.decodeStory = decodeStory;
exports.getTextForId = getTextForId;
exports.getNextForId = getNextForId;
/* No side effect */
