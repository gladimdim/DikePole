// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");
var Story$ReactTemplate = require("./Story.bs.js");

var component = ReasonReact.reducerComponent("Tree");

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              var match = self[/* state */1][/* story */1];
              if (match !== undefined) {
                var s = match;
                var text = Story$ReactTemplate.getTextForId(self[/* state */1][/* current */0], s);
                return React.createElement("div", undefined, React.createElement("div", undefined, React.createElement("div", undefined, text)), $$Array.of_list(List.mapi((function (_i, next) {
                                      return React.createElement("button", {
                                                  onClick: (function (_event) {
                                                      return Curry._1(self[/* send */3], /* SetStory */Block.__(2, [next[/* target */0]]));
                                                    })
                                                }, next[/* text */1]);
                                    }), Story$ReactTemplate.getNextForId(self[/* state */1][/* current */0], s))));
              } else {
                return React.createElement("button", {
                            onClick: (function (_event) {
                                return Curry._1(self[/* send */3], /* LoadStories */1);
                              })
                          }, "Load Stories");
              }
            }),
          /* initialState */(function (param) {
              return /* record */[
                      /* current */-1,
                      /* story */undefined
                    ];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (action, state) {
              if (typeof action === "number") {
                if (action === 0) {
                  return /* Update */Block.__(0, [state]);
                } else {
                  return /* SideEffects */Block.__(1, [(function (self) {
                                fetch("/data.json").then((function (prim) {
                                          return prim.json();
                                        })).then((function (json) {
                                        var s = Story$ReactTemplate.decodeStory(json);
                                        Curry._1(self[/* send */3], /* StartStory */Block.__(1, [s]));
                                        return Promise.resolve(/* [] */0);
                                      }));
                                return /* () */0;
                              })]);
                }
              } else {
                switch (action.tag | 0) {
                  case 1 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* current */0,
                                  /* story */action[0]
                                ]]);
                  case 0 : 
                  case 2 : 
                      return /* Update */Block.__(0, [/* record */[
                                  /* current */action[0],
                                  /* story */state[/* story */1]
                                ]]);
                  
                }
              }
            }),
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

exports.component = component;
exports.make = make;
/* component Not a pure module */
